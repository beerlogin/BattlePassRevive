package org.vaylorm.battlePassRevive.commands;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.command.TabCompleter;
import org.bukkit.entity.Player;
import org.vaylorm.battlePassRevive.managers.QuestManager;
import org.vaylorm.battlePassRevive.quests.Quest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class BattlePassCommand implements CommandExecutor, TabCompleter {
    private final QuestManager questManager;

    public BattlePassCommand(QuestManager questManager) {
        this.questManager = questManager;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage(ChatColor.RED + "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤!");
            return true;
        }

        Player player = (Player) sender;

        if (args.length < 1) {
            sendHelp(player);
            return true;
        }

        switch (args[0].toLowerCase()) {
            case "help":
                sendHelp(player);
                break;

            case "activate":
                if (args.length < 2) {
                    player.sendMessage(ChatColor.RED + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bp activate <zombie/wheat>");
                    return true;
                }
                String questId = args[1].toLowerCase();
                if (questManager.activateQuest(player, questId)) {
                    player.sendMessage(ChatColor.GREEN + "–ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!");
                } else {
                    player.sendMessage(ChatColor.RED + "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–≤–µ—Å—Ç! –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.");
                }
                break;

            case "progress":
                if (args.length < 2) {
                    player.sendMessage(ChatColor.RED + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bp progress <zombie/wheat>");
                    return true;
                }
                Quest quest = questManager.getQuest(player, args[1].toLowerCase());
                if (quest != null) {
                    player.sendMessage(ChatColor.GOLD + "–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞: " + 
                        ChatColor.WHITE + quest.getCurrentProgress() + "/" + quest.getTargetProgress());
                    if (quest.isCompleted()) {
                        player.sendMessage(ChatColor.GREEN + "–ö–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!");
                    } else if (quest.isActive()) {
                        player.sendMessage(ChatColor.YELLOW + "–ö–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω");
                    } else {
                        player.sendMessage(ChatColor.RED + "–ö–≤–µ—Å—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
                    }
                } else {
                    player.sendMessage(ChatColor.RED + "–ö–≤–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                }
                break;

            case "quests":
                showAvailableQuests(player);
                break;

            case "setprogress":
                if (!sender.hasPermission("battlepass.admin")) {
                    sender.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!");
                    return true;
                }
                if (args.length < 4) {
                    sender.sendMessage(ChatColor.RED + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bp setprogress <–∏–≥—Ä–æ–∫> <zombie/wheat> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>");
                    return true;
                }
                
                Player targetPlayer = Bukkit.getPlayer(args[1]);
                if (targetPlayer == null) {
                    sender.sendMessage(ChatColor.RED + "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                    return true;
                }
                
                String targetQuestId = args[2].toLowerCase();
                int newProgress;
                try {
                    newProgress = Integer.parseInt(args[3]);
                } catch (NumberFormatException e) {
                    sender.sendMessage(ChatColor.RED + "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞!");
                    return true;
                }
                
                Quest targetQuest = questManager.getQuest(targetPlayer, targetQuestId);
                if (targetQuest == null) {
                    sender.sendMessage(ChatColor.RED + "–ö–≤–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                    return true;
                }
                
                targetQuest.setCurrentProgress(newProgress);
                sender.sendMessage(ChatColor.GREEN + "–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ " + newProgress);
                break;

            case "restart":
                if (args.length < 2) {
                    sender.sendMessage("¬ßc–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /battlepass restart <quest_id>");
                    return true;
                }
                
                questManager.restartQuest(player, args[1]);
                sender.sendMessage("¬ßa–ö–≤–µ—Å—Ç " + args[1] + " –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!");
                return true;

            default:
                sendHelp(player);
                break;
        }

        return true;
    }

    @Override
    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
        List<String> completions = new ArrayList<>();
        
        if (args.length == 1) {
            // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã
            completions.addAll(Arrays.asList("help", "progress", "quests", "activate", "restart"));
            return filterCompletions(completions, args[0]);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥, —Ç—Ä–µ–±—É—é—â–∏—Ö id –∫–≤–µ—Å—Ç–∞
        if (args.length == 2) {
            if (args[0].equalsIgnoreCase("activate") || 
                args[0].equalsIgnoreCase("progress") ||
                args[0].equalsIgnoreCase("restart")) {
                completions.addAll(Arrays.asList("zombie", "wheat"));
                return filterCompletions(completions, args[1]);
            }
        }
        
        return completions;
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    private List<String> filterCompletions(List<String> completions, String partial) {
        String lowercasePartial = partial.toLowerCase();
        return completions.stream()
                .filter(str -> str.toLowerCase().startsWith(lowercasePartial))
                .collect(Collectors.toList());
    }

    private void sendHelp(Player player) {
        player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê " + ChatColor.RED + "–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π BattlePass" + ChatColor.GREEN + " ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
        player.sendMessage("");
        player.sendMessage(ChatColor.RED + "‚òÉ " + ChatColor.YELLOW + "/bp help " + 
            ChatColor.WHITE + "- –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –∫–æ–º–∞–Ω–¥");
        player.sendMessage(ChatColor.RED + "üéÑ " + ChatColor.YELLOW + "/bp quests " + 
            ChatColor.WHITE + "- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –∫–≤–µ—Å—Ç—ã");
        player.sendMessage(ChatColor.RED + "üéÅ " + ChatColor.YELLOW + "/bp activate <zombie/wheat> " + 
            ChatColor.WHITE + "- –ù–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞");
        player.sendMessage(ChatColor.RED + "‚≠ê " + ChatColor.YELLOW + "/bp progress <zombie/wheat> " + 
            ChatColor.WHITE + "- –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å");
        player.sendMessage(ChatColor.RED + "üîî " + ChatColor.YELLOW + "/bp restart <zombie/wheat> " + 
            ChatColor.WHITE + "- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–≤–µ—Å—Ç");
        if (player.hasPermission("battlepass.admin")) {
            player.sendMessage(ChatColor.RED + "‚ùÑ " + ChatColor.RED + "/bp setprogress <–∏–≥—Ä–æ–∫> <zombie/wheat> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> " + 
                ChatColor.WHITE + "- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞");
        }
        player.sendMessage("");
        player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
    }

    private void showAvailableQuests(Player player) {
        Quest zombieQuest = questManager.getQuest(player, "zombie");
        Quest wheatQuest = questManager.getQuest(player, "wheat");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –æ–±–∞ –∫–≤–µ—Å—Ç–∞
        if ((zombieQuest != null && zombieQuest.isCompleted()) && 
            (wheatQuest != null && wheatQuest.isCompleted())) {
            player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê " + ChatColor.RED + "–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ö–≤–µ—Å—Ç—ã" + ChatColor.GREEN + " ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
            player.sendMessage("");
            player.sendMessage(ChatColor.YELLOW + "–í—Å–µ –∫–≤–µ—Å—Ç—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!");
            player.sendMessage("");
            player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
            return;
        }

        player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê " + ChatColor.RED + "–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ö–≤–µ—Å—Ç—ã" + ChatColor.GREEN + " ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
        player.sendMessage("");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
        if (zombieQuest == null || !zombieQuest.isCompleted()) {
            player.sendMessage(ChatColor.RED + "üßü " + ChatColor.YELLOW + "–û—Ö–æ—Ç–∞ –Ω–∞ –°–Ω–µ–∂–Ω—ã—Ö –ó–æ–º–±–∏: " + 
                ChatColor.WHITE + "–ü–æ–±–µ–¥–∏—Ç–µ 10 –∑–æ–º–±–∏ –≤ —Å–Ω–µ–∂–Ω—É—é –Ω–æ—á—å");
            if (zombieQuest != null) {
                String status = getQuestStatus(zombieQuest);
                player.sendMessage(ChatColor.RED + "‚òÉ " + ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å –æ—Ö–æ—Ç—ã –Ω–∞ –∑–æ–º–±–∏: " + status);
            }
            player.sendMessage("");
        }
        
        if (wheatQuest == null || !wheatQuest.isCompleted()) {
            player.sendMessage(ChatColor.RED + "üåæ " + ChatColor.YELLOW + "–ú–æ—Ä–æ–∑–æ—Å—Ç–æ–π–∫–∞—è –ü—à–µ–Ω–∏—Ü–∞: " + 
                ChatColor.WHITE + "–°–æ–±–µ—Ä–∏—Ç–µ 1000 –ø—à–µ–Ω–∏—Ü—ã –≤ –∑–∏–º–Ω—é—é —Å—Ç—É–∂—É");
            if (wheatQuest != null) {
                String status = getQuestStatus(wheatQuest);
                player.sendMessage(ChatColor.RED + "‚ùÑ " + ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±–æ—Ä–∞ –ø—à–µ–Ω–∏—Ü—ã: " + status);
            }
            player.sendMessage("");
        }
        
        player.sendMessage(ChatColor.GREEN + "‚ùÑ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÑ");
    }

    private String getQuestStatus(Quest quest) {
        if (quest.isCompleted()) {
            return ChatColor.GREEN + "–í—ã–ø–æ–ª–Ω–µ–Ω";
        } else if (quest.isActive()) {
            return ChatColor.GOLD + "–ê–∫—Ç–∏–≤–µ–Ω " + ChatColor.WHITE + "(" + 
                   quest.getCurrentProgress() + "/" + quest.getTargetProgress() + ")";
        } else {
            return ChatColor.RED + "–ù–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω";
        }
    }
} 